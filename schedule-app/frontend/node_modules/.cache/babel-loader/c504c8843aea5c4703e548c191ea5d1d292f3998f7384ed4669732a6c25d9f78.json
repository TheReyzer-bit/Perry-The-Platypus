{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\Perry-The-Platypus\\\\schedule-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport AdminPage from './pages/AdminPage';\nimport StudentPage from './pages/StudentPage';\nimport TeacherPage from './pages/TeacherPage';\nimport EditModePage from './pages/EditModePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const handleLogin = (login, password) => {\n    // Здесь должна быть логика для проверки логина и пароля\n    // Пример:\n    if (login === 'admin' && password === 'admin') {\n      setUser({\n        role: 'admin'\n      });\n    } else if (login === 'teacher' && password === 'teacher') {\n      setUser({\n        role: 'teacher'\n      });\n    } else if (login === 'student' && password === 'student') {\n      setUser({\n        role: 'student'\n      });\n    } else {\n      console.error('Invalid login credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), user && user.role === 'admin' && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), user && user.role === 'teacher' && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/teacher\",\n          element: /*#__PURE__*/_jsxDEV(TeacherPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), user && user.role === 'student' && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/student\",\n          element: /*#__PURE__*/_jsxDEV(StudentPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), user && user.role === 'admin' && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          element: /*#__PURE__*/_jsxDEV(EditModePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","LoginPage","AdminPage","StudentPage","TeacherPage","EditModePage","jsxDEV","_jsxDEV","App","_s","user","setUser","handleLogin","login","password","role","console","error","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/Perry-The-Platypus/schedule-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport LoginPage from './pages/LoginPage';\r\nimport AdminPage from './pages/AdminPage';\r\nimport StudentPage from './pages/StudentPage';\r\nimport TeacherPage from './pages/TeacherPage';\r\nimport EditModePage from './pages/EditModePage';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const handleLogin = (login, password) => {\r\n    // Здесь должна быть логика для проверки логина и пароля\r\n    // Пример:\r\n    if (login === 'admin' && password === 'admin') {\r\n      setUser({ role: 'admin' });\r\n    } else if (login === 'teacher' && password === 'teacher') {\r\n      setUser({ role: 'teacher' });\r\n    } else if (login === 'student' && password === 'student') {\r\n      setUser({ role: 'student' });\r\n    } else {\r\n      console.error('Invalid login credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Routes>\r\n          <Route path=\"/\" element={<LoginPage onLogin={handleLogin} />} />\r\n          {user && user.role === 'admin' && (\r\n            <Route path=\"/admin\" element={<AdminPage />} />\r\n          )}\r\n          {user && user.role === 'teacher' && (\r\n            <Route path=\"/teacher\" element={<TeacherPage />} />\r\n          )}\r\n          {user && user.role === 'student' && (\r\n            <Route path=\"/student\" element={<StudentPage />} />\r\n          )}\r\n          {user && user.role === 'admin' && (\r\n            <Route path=\"/edit\" element={<EditModePage />} />\r\n          )}\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}